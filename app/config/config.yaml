server:
  name: !!str "name"

  tls:
    # These do not need to exist, however, if they don't, start.sh will create them with the below options
    tls_key_file: !!str ./server.key
    tls_crt_file: !!str ./server.crt

    # common name for tls cert
    tls_cn: !!str "some.domain"
    # org name for tls cert
    tls_org: !!str "some-company"
    # country code for tls cert, 2 letters
    tls_country: !!str "AA"
    # email for tls cert - if you feel like doxing yourself. 
    tls_email: !!str "some@email.com"
    # How long before the cert expires
    tls_expire: !!int 180

  authentication:
    secret_key: !!str "somekey" # secret key for flask, make this strong
    bcrypt:
      rounds: !!int 14 # Rounds for Bcrpyt encryption. Up to 24, however the higher you go, the higher the computation time. 

    jwt:
      secret_key: !!str "somejwtkey" # JWT secret key, used to sign all the JWT tokens, MAKE THIS STRONG!
      expiration: !!int  900 # Expiration time for tokens once generated, in seconds

  endpoints: # endpoint settings
    enable_registration: !!bool True # enable/disable registration endpoint

# https://medium.com/building-the-system/gunicorn-3-means-of-concurrency-efbb547674b7
# Gunicorn Perf Optimization reference
wsgi:
  # bind options for WSGI/Gunicorn
  bind:
    port: !!int 8081
    ip: !!str "0.0.0.0"

  # Number of workers for WSGI. 
  workers: !!int 4